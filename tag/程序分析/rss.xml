<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>alazymachine • Posts by &#34;程序分析&#34; tag</title>
        <link>https://alazymechnaic.github.io</link>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Tue, 02 May 2023 18:21:39 +0800</pubDate>
        <lastBuildDate>Tue, 02 May 2023 18:21:39 +0800</lastBuildDate>
        <category>paper</category>
        <category>fuzz</category>
        <category>arm</category>
        <category>Linux</category>
        <category>C</category>
        <category>go</category>
        <category>Paper</category>
        <category>bypass</category>
        <category>clash</category>
        <category>Hook</category>
        <category>go, RE</category>
        <category>kernel pwn</category>
        <category>binary</category>
        <category>writing</category>
        <category>HEAP PWN CTF</category>
        <category>Android</category>
        <category>dataflow</category>
        <category>pwn</category>
        <category>java</category>
        <category>web</category>
        <category>exploit</category>
        <category>network</category>
        <category>代码分析</category>
        <category>二进制安全</category>
        <category>渗透</category>
        <category>程序分析</category>
        <category>stack overflow</category>
        <category>算法</category>
        <item>
            <guid isPermalink="true">https://alazymechnaic.github.io/2023/05/02/kong-zhi-liu-wan-zheng-xing-cfi/</guid>
            <title>控制流完整性（CFI）</title>
            <link>https://alazymechnaic.github.io/2023/05/02/kong-zhi-liu-wan-zheng-xing-cfi/</link>
            <category>程序分析</category>
            <pubDate>Tue, 02 May 2023 18:21:39 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;Finding-Cracks-in-Shields-On-the-Security-of-Control-Flow-Integrity-Mechanisms&#34;&gt;&lt;a href=&#34;#Finding-Cracks-in-Shields-On-the-Security-of-Control-Flow-Integrity-Mechanisms&#34; class=&#34;headerlink&#34; title=&#34;Finding Cracks in Shields:On the Security of Control Flow Integrity Mechanisms&#34;&gt;&lt;/a&gt;Finding Cracks in Shields:On the Security of Control Flow Integrity Mechanisms&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://alazymechnaic.oss-cn-hangzhou.aliyuncs.com/blog-page/202305042048279.png&#34; alt=&#34;image-20230502185448539&#34;&gt;&lt;/p&gt;
&lt;p&gt;​	最早的CFI机制在2005年被提出，后续又出现了各种各样的CFI，但是有一点就是这些机制都不能给予程序绝对的控制流安全性。通常的做法是给ICT（indirect control transfer）指令施加监视器，一个ICT可能存在多个合法的跳转目标，但是在每次执行的时候只能跳转到一个确定的位置。（因此最理想的情况就是每条跳转指令只能有一个确定的跳转位置）&lt;/p&gt;
&lt;p&gt;​	当前的任何CFI控制流安全策略都需要解决以下几个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如何让claimed boundary和real boundary match？&lt;/li&gt;
&lt;li&gt;有些可行的目标组合依然会导致漏洞利用（这不就是DOP么？）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后这个文章后面讲了评估CFI方案好坏的方法，等用到的时候再看&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
