{
    "version": "https://jsonfeed.org/version/1",
    "title": "alazymachine • All posts by \"hook\" tag",
    "description": "",
    "home_page_url": "https://alazymechnaic.github.io",
    "items": [
        {
            "id": "https://alazymechnaic.github.io/2023/10/03/frida-hook/",
            "url": "https://alazymechnaic.github.io/2023/10/03/frida-hook/",
            "title": "frida-hook",
            "date_published": "2023-10-03T11:03:18.000Z",
            "content_html": "<h1 id=\"Frida-hook实战\"><a href=\"#Frida-hook实战\" class=\"headerlink\" title=\"Frida hook实战\"></a>Frida hook实战</h1><hr>\n<p>本文记录frida在Windows上的使用过程。代码出处位于参考链接中。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>安装Python的frida模块：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pip <span class=\"token function\">install</span> frida-tools\npip <span class=\"token function\">install</span> frida<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>首先下载frida的server：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ZyaWRhL2ZyaWRhL3JlbGVhc2VzL2Rvd25sb2FkLzE2LjEuNC9mcmlkYS1zZXJ2ZXItMTYuMS40LWFuZHJvaWQteDg2XzY0Lnh6\">https://github.com/frida/frida/releases/download/16.1.4/frida-server-16.1.4-android-x86_64.xz</span></p>\n<p>安装frida-server</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">adb push frida-server /data/local/tmp/frida-server\nadb shell <span class=\"token function\">chmod</span> <span class=\"token number\">777</span> /data/local/tmp/frida-server\t\n<span class=\"token comment\"># 而后启动</span>\n/data/local/tmp/frida-server\n frida-ps <span class=\"token parameter variable\">-U</span> <span class=\"token comment\"># 该指令执行过后能够看到在运行的frida-server</span>\n frida-ls-devices <span class=\"token comment\"># 查看当前的设备</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img data-src=\"https://alazymechnaic.oss-cn-hangzhou.aliyuncs.com/blog-page/202310031921608.png\" alt=\"image-20231003192150554\"></p>\n<p>还需要保证 selinux 是关闭的状态，可以在 adb shell 里，su - 获得 root 权限之后，输入 setenforce 0 命令来获得。</p>\n<h3 id=\"adb常用指令\"><a href=\"#adb常用指令\" class=\"headerlink\" title=\"adb常用指令\"></a>adb常用指令</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">adb devices <span class=\"token comment\"># 列出当前已经连接的安卓设备</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://alazymechnaic.oss-cn-hangzhou.aliyuncs.com/blog-page/202310031916069.png\" alt=\"image-20231003191603976\"></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">adb <span class=\"token parameter variable\">-s</span> <span class=\"token operator\">&lt;</span>device_id<span class=\"token operator\">&gt;</span> shell <span class=\"token comment\"># 这里可以使用adb -s 127.0.0.1:5555 shell 连接</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"Frida-Hook-Native脚本编写\"><a href=\"#Frida-Hook-Native脚本编写\" class=\"headerlink\" title=\"Frida Hook Native脚本编写\"></a>Frida Hook Native脚本编写</h2><p>脚本运行指令</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">frida <span class=\"token operator\">-</span>U <span class=\"token operator\">-</span>f &lt;com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>x86demo 需要加载的包名&gt; <span class=\"token operator\">-</span>l &lt;hook<span class=\"token punctuation\">.</span>js 本次运行的脚本&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>当然也可以使用python的脚本运行，但是不推荐，看不到js代码中的报错</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> frida\n<span class=\"token keyword\">import</span> sys\n<span class=\"token comment\"># 定义目标应用程序的包名和目标函数名</span>\ntarget_package_name <span class=\"token operator\">=</span> <span class=\"token string\">'com.example.x86demo'</span>\ntarget_function_name <span class=\"token operator\">=</span> <span class=\"token string\">'Java_com_example_x86demo_MainActivity_stringFromJNI'</span> <span class=\"token comment\"># 这里注意使用的函数名称一定是以Java为开头的函数</span>\n\n\n<span class=\"token comment\"># 创建Frida会话并附加到目标应用程序</span>\ndevice <span class=\"token operator\">=</span> frida<span class=\"token punctuation\">.</span>get_device<span class=\"token punctuation\">(</span><span class=\"token string\">'emulator-5554'</span><span class=\"token punctuation\">)</span>\npid <span class=\"token operator\">=</span> device<span class=\"token punctuation\">.</span>spawn<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>target_package_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nsession <span class=\"token operator\">=</span> device<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>pid<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># device.resume(pid)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">on_message</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> message<span class=\"token punctuation\">[</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'send'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[*] {0}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">[</span><span class=\"token string\">'payload'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 创建Native层Hook</span>\nscript <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>create_script<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">\"\"\"\nJava.perform(() =&gt; {\n\t// 这里写js脚本\n})           \n\"\"\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 注册Hook回调函数</span>\nscript<span class=\"token punctuation\">.</span>on<span class=\"token punctuation\">(</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span> on_message<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 加载并运行Hook脚本</span>\nscript<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 保持脚本运行</span>\n<span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Press any key to exit...\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"获取so基地址\"><a href=\"#获取so基地址\" class=\"headerlink\" title=\"获取so基地址\"></a>获取so基地址</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">hookBaseAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> address <span class=\"token operator\">=</span> Module<span class=\"token punctuation\">.</span><span class=\"token function\">findBaseAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"libnative-lib.so\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//这里我获取到的是 0xb8f91000</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"查看native层内容\"><a href=\"#查看native层内容\" class=\"headerlink\" title=\"查看native层内容\"></a>查看native层内容</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 枚举native层函数</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">hookImEx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"以下是导入函数：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> importMethods <span class=\"token operator\">=</span> Module<span class=\"token punctuation\">.</span><span class=\"token function\">enumerateImports</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"libnative-lib.so\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index <span class=\"token operator\">&lt;</span> importMethods<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> importMethods<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"以下是导出函数：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> exportMethods <span class=\"token operator\">=</span> Module<span class=\"token punctuation\">.</span><span class=\"token function\">enumerateExports</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"libnative-lib.so\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index <span class=\"token operator\">&lt;</span> exportMethods<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> exportMethods<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 查看native层的调用结果</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">hookByName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> address <span class=\"token operator\">=</span> Module<span class=\"token punctuation\">.</span><span class=\"token function\">findExportByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"libnative-lib.so\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Java_com_zyc_fridasodemo_Calc_addThreeNum\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        Interceptor<span class=\"token punctuation\">.</span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">onEnter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"onEnter...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"args[0]:\"</span><span class=\"token punctuation\">,</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"args[1]:\"</span><span class=\"token punctuation\">,</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"args[2]：\"</span><span class=\"token punctuation\">,</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"args[3]：\"</span><span class=\"token punctuation\">,</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"args[4]：\"</span><span class=\"token punctuation\">,</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function\">onLeave</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">retval</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"onLeave...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"retval:\"</span><span class=\"token punctuation\">,</span>retval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 函数返回值</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"修改native层的参数\"><a href=\"#修改native层的参数\" class=\"headerlink\" title=\"修改native层的参数\"></a>修改native层的参数</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 修改native层的内容</span>\n<span class=\"token comment\">// 根据上面获取的 args 我们可以修改参数，但注意参数得是 NativePointer，直接用 “=” 赋值会报错“expected a pointer”</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">hookParam</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> address <span class=\"token operator\">=</span> Module<span class=\"token punctuation\">.</span><span class=\"token function\">findExportByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"libnative-lib.so\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Java_com_zyc_fridasodemo_Calc_addThreeNum\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        Interceptor<span class=\"token punctuation\">.</span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">onEnter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                args<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">ptr</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 写成 args[2]=1000 会报错</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function\">onLeave</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">retval</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"修改native层函数的返回值\"><a href=\"#修改native层函数的返回值\" class=\"headerlink\" title=\"修改native层函数的返回值\"></a>修改native层函数的返回值</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">hookReturn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> address <span class=\"token operator\">=</span> Module<span class=\"token punctuation\">.</span><span class=\"token function\">findExportByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"libnative-lib.so\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Java_com_zyc_fridasodemo_Calc_addThreeNum\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        Interceptor<span class=\"token punctuation\">.</span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">onEnter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function\">onLeave</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">retval</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                retval<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//用 replace() 不要用 =</span>\n                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"retval:\"</span><span class=\"token punctuation\">,</span>retval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">// 如果返回值是jstring，得用下面方式替换</span>\n               <span class=\"token comment\">//var env = Java.vm.getEnv(); //获取env对象，即第一个参数</span>\n               <span class=\"token comment\">//var jstrings = env.newStringUtf(\"xxxx\"); //返回的是字符串指针，使用jni函数构造一个newStringUtf对象用来代替这个指针</span>\n               <span class=\"token comment\">//retval.replace(jstrings); </span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Hook未导出的函数\"><a href=\"#Hook未导出的函数\" class=\"headerlink\" title=\"Hook未导出的函数\"></a>Hook未导出的函数</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">hookDynamic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> soAddress <span class=\"token operator\">=</span> Module<span class=\"token punctuation\">.</span><span class=\"token function\">findBaseAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"libnative-lib.so\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"so基址：\"</span> <span class=\"token operator\">+</span> soAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>soAddress<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> methodAddress <span class=\"token operator\">=</span> soAddress<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x0690</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// thrumb指令集要+1</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>methodAddress<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"函数地址：\"</span> <span class=\"token operator\">+</span> methodAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Interceptor<span class=\"token punctuation\">.</span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span>methodAddress<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">onEnter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hook动态注册函数的参数：\"</span> <span class=\"token operator\">+</span> Java<span class=\"token punctuation\">.</span>vm<span class=\"token punctuation\">.</span><span class=\"token function\">getEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getStringUtfChars</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">readCString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//打印jstring要用getStringUtfChars</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function\">onLeave</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">retval</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hook动态注册函数的返回值：\"</span> <span class=\"token operator\">+</span> Java<span class=\"token punctuation\">.</span>vm<span class=\"token punctuation\">.</span><span class=\"token function\">getEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getStringUtfChars</span><span class=\"token punctuation\">(</span>retval<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">readCString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Hook-so加载（dlopen）\"><a href=\"#Hook-so加载（dlopen）\" class=\"headerlink\" title=\"Hook so加载（dlopen）\"></a>Hook so加载（dlopen）</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 当遇到“等so加载完后进行某Hook操作时”，可以Hook dlopen（有的是android_dlopen_ext）方法来确定so的加载。PS：不推荐Hook System.loadLibrary()，因为加载so的方式并不止这一种，而且最终都会调用 dlopen()</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">hookDlopen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> dlopenAddr <span class=\"token operator\">=</span> Module<span class=\"token punctuation\">.</span><span class=\"token function\">findExportByName</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dlopen\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dlopenAddr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        Interceptor<span class=\"token punctuation\">.</span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span>dlopenAddr<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">onEnter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// dlopen(const char* filename, int flags)</span>\n                <span class=\"token keyword\">let</span> soName <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">readCString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"/data/app/com.zyc.fridasodemo-1/lib/x86/libnative-lib.so\"</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>soName<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"libnative-lib.so\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"成功加载到了--&gt;\"</span> <span class=\"token operator\">+</span> soName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hasloaded <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function\">onLeave</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">retval</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">//onLeave()中才是dlopen()加载完成后</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hasloaded<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token function\">hooImEx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 等so加载完成就执行导入/导出函数打印</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"读写内存\"><a href=\"#读写内存\" class=\"headerlink\" title=\"读写内存\"></a>读写内存</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">hookMem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> soAddress <span class=\"token operator\">=</span> Module<span class=\"token punctuation\">.</span><span class=\"token function\">findBaseAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"libnative-lib.so\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"so基址：\"</span> <span class=\"token operator\">+</span> soAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>soAddress<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"读取...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">const</span> strAddress <span class=\"token operator\">=</span> soAddress<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x028334</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打印这段字符串：\"</span> <span class=\"token operator\">+</span> strAddress<span class=\"token punctuation\">.</span><span class=\"token function\">readCString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"读16字节：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>strAddress<span class=\"token punctuation\">.</span><span class=\"token function\">readByteArray</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"写入...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Memory<span class=\"token punctuation\">.</span><span class=\"token function\">protect</span><span class=\"token punctuation\">(</span>strAddress<span class=\"token punctuation\">,</span> Process<span class=\"token punctuation\">.</span>pageSize<span class=\"token punctuation\">,</span> <span class=\"token string\">\"rw-\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//修改内存页属性后再写入，不然可能报access violation accessing</span>\n            strAddress<span class=\"token punctuation\">.</span><span class=\"token function\">writeUtf8String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello from PHP\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//内存写入字符串,该方法末尾会自动添加'\\0'</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n打印这段字符串：\"</span> <span class=\"token operator\">+</span> strAddress<span class=\"token punctuation\">.</span><span class=\"token function\">readCString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"读16字节：\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>strAddress<span class=\"token punctuation\">.</span><span class=\"token function\">readByteArray</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"一个例子\"><a href=\"#一个例子\" class=\"headerlink\" title=\"一个例子\"></a>一个例子</h3><h4 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>很简单的一个app，打开会显示Hello from C++，题目的要求是修改该字符串为任意值。看起来挺容易</p>\n<p><img data-src=\"https://alazymechnaic.oss-cn-hangzhou.aliyuncs.com/blog-page/image-20231004222425282.png\" alt=\"image-20231004222425282\"></p>\n<p>使用jeb逆向看一下MainActivity的逻辑：字符串生成函数来自native层的stringFromJNI，这里的第一想法是使用frida 在native做hook。<br><img data-src=\"https://alazymechnaic.oss-cn-hangzhou.aliyuncs.com/blog-page/image-20231004222542793.png\" alt=\"image-20231004222542793\"></p>\n<p>导出libnative-lib.so文件，IDA pro 7.5还是蛮强大的，老版本的IDA是不认识JNI函数的。在export找到对应的函数：</p>\n<p><img data-src=\"https://alazymechnaic.oss-cn-hangzhou.aliyuncs.com/blog-page/image-20231004222937267.png\" alt=\"image-20231004222937267\"></p>\n<p>逻辑很简单</p>\n<p><img data-src=\"https://alazymechnaic.oss-cn-hangzhou.aliyuncs.com/blog-page/image-20231004222953301.png\" alt=\"image-20231004222953301\"></p>\n<p>第一次使用的脚本如下：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">hookByName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> address <span class=\"token operator\">=</span> Module<span class=\"token punctuation\">.</span><span class=\"token function\">findExportByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"libnative-lib.so\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Java_com_example_x86demo_MainActivity_stringFromJNI\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            Interceptor<span class=\"token punctuation\">.</span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">onEnter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"onEnter...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function\">onLeave</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">retval</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n                    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"onLeave...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">var</span> env <span class=\"token operator\">=</span> Java<span class=\"token punctuation\">.</span>vm<span class=\"token punctuation\">.</span><span class=\"token function\">getEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">var</span> jstrings <span class=\"token operator\">=</span> env<span class=\"token punctuation\">.</span><span class=\"token function\">newStringUtf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hacked!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    retval<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>jstrings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"retval:\"</span><span class=\"token punctuation\">,</span>retval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 函数返回值</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NOT FOUND!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>​\t但是frida一直是NOT FOUND，这是因为frida要重启APP去执行该脚本，在onCreate函数执行前libnative-lib.so还没有加载，因此在程序内存中是找不到该so文件的。因此有两种方法，一种是使用dlopen手动加载该so，但是程序直接崩溃了。。。。</p>\n<p>​\t另一种方法是hook onCreate函数，在onCreate函数执行之前执行native的hook，当然这里so文件已经加载进内存了，stringFromJNI中的字符串是硬编码存储，也可以直接修改内存。要注意以下几点：</p>\n<ul>\n<li><strong>hook native</strong><ul>\n<li>在对native函数进行hook的时候要使用函数的全名。打开IDA后Export显示的名称</li>\n<li>修改返回值时，如果返回值是string，不能简单的replace（具体方式看下面脚本）</li>\n</ul>\n</li>\n<li><strong>修改内存</strong><ul>\n<li>修改内存先找so基址，偏移量将IDA segment中的base addr设为0后，显示的地址加so基址即可</li>\n<li>写内容时先修改内存页的保护属性</li>\n</ul>\n</li>\n</ul>\n<p>具体脚本如下：</p>\n<h4 id=\"解题脚本\"><a href=\"#解题脚本\" class=\"headerlink\" title=\"解题脚本\"></a>解题脚本</h4><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">Java<span class=\"token punctuation\">.</span><span class=\"token function\">perform</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">hookMem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> soAddress <span class=\"token operator\">=</span> Module<span class=\"token punctuation\">.</span><span class=\"token function\">findBaseAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"libnative-lib.so\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"so基址：\"</span> <span class=\"token operator\">+</span> soAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>soAddress<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"读取...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">const</span> strAddress <span class=\"token operator\">=</span> soAddress<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x028334</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打印这段字符串：\"</span> <span class=\"token operator\">+</span> strAddress<span class=\"token punctuation\">.</span><span class=\"token function\">readCString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"读16字节：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>strAddress<span class=\"token punctuation\">.</span><span class=\"token function\">readByteArray</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"写入...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Memory<span class=\"token punctuation\">.</span><span class=\"token function\">protect</span><span class=\"token punctuation\">(</span>strAddress<span class=\"token punctuation\">,</span> Process<span class=\"token punctuation\">.</span>pageSize<span class=\"token punctuation\">,</span> <span class=\"token string\">\"rw-\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//修改内存页属性后再写入</span>\n            strAddress<span class=\"token punctuation\">.</span><span class=\"token function\">writeUtf8String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x86demo Hacked\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//内存写入字符串,该方法末尾会自动添加'\\0'</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n打印这段字符串：\"</span> <span class=\"token operator\">+</span> strAddress<span class=\"token punctuation\">.</span><span class=\"token function\">readCString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"读16字节：\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>strAddress<span class=\"token punctuation\">.</span><span class=\"token function\">readByteArray</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">var</span> clazz <span class=\"token operator\">=</span> Java<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.example.x86demo.MainActivity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    clazz<span class=\"token punctuation\">.</span>onCreate<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">implementation</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hook MainActivity onCreate()...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// hookMem();</span>\n        <span class=\"token function\">hookByName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">hookByName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> address <span class=\"token operator\">=</span> Module<span class=\"token punctuation\">.</span><span class=\"token function\">findExportByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"libnative-lib.so\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Java_com_example_x86demo_MainActivity_stringFromJNI\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            Interceptor<span class=\"token punctuation\">.</span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">onEnter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"onEnter...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function\">onLeave</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">retval</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n                    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"onLeave...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">var</span> env <span class=\"token operator\">=</span> Java<span class=\"token punctuation\">.</span>vm<span class=\"token punctuation\">.</span><span class=\"token function\">getEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">var</span> jstrings <span class=\"token operator\">=</span> env<span class=\"token punctuation\">.</span><span class=\"token function\">newStringUtf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hacked!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    retval<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>jstrings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"retval:\"</span><span class=\"token punctuation\">,</span>retval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 函数返回值</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NOt FOUND!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>最终效果如下：</p>\n<img data-src=\"https://alazymechnaic.oss-cn-hangzhou.aliyuncs.com/blog-page/image-20231004224219956.png\" alt=\"image-20231004224219956\" style=\"zoom: 80%;\">\n\n<h2 id=\"Frida-Hook-Java层函数\"><a href=\"#Frida-Hook-Java层函数\" class=\"headerlink\" title=\"Frida Hook Java层函数\"></a>Frida Hook Java层函数</h2><h3 id=\"Hook一般java层函数\"><a href=\"#Hook一般java层函数\" class=\"headerlink\" title=\"Hook一般java层函数\"></a>Hook一般java层函数</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">Java<span class=\"token punctuation\">.</span><span class=\"token function\">perform</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> clazz <span class=\"token operator\">=</span> Java<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.zyc.fridademo.Calc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    clazz<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">implementation</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">p1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hook开始...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"原p1=\"</span><span class=\"token operator\">+</span>p1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hook修改参数...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        p1<span class=\"token operator\">+=</span><span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"现p1=\"</span><span class=\"token operator\">+</span>p1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Hook构造函数\"><a href=\"#Hook构造函数\" class=\"headerlink\" title=\"Hook构造函数\"></a>Hook构造函数</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">Java<span class=\"token punctuation\">.</span><span class=\"token function\">perform</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> clazz <span class=\"token operator\">=</span> Java<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.zyc.fridademo.Calc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    clazz<span class=\"token punctuation\">.</span>$init<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">implementation</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">p1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hook构造开始...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"原p1=\"</span><span class=\"token operator\">+</span>p1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        p1<span class=\"token operator\">+=</span><span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"现p1=\"</span><span class=\"token operator\">+</span>p1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$init</span><span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Hook重载函数\"><a href=\"#Hook重载函数\" class=\"headerlink\" title=\"Hook重载函数\"></a>Hook重载函数</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 由于Calc中有add(int num1)和add(int num1,String num2)，像普通函数那样Hook是会报错的，涉及到重载就要用到 overload() ：</span>\n<span class=\"token comment\">// 这里按照传入的参数类型区分二者的差异</span>\nJava<span class=\"token punctuation\">.</span><span class=\"token function\">perform</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> clazz <span class=\"token operator\">=</span> Java<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.zyc.fridademo.Calc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    clazz<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">overload</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"int\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">implementation</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hook add(int num1)...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">888</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    clazz<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">overload</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"int\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"java.lang.String\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">implementation</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hook add(int num1,String num2)...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">999</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 也可以通过遍历重载函数的形似\t</span>\nJava<span class=\"token punctuation\">.</span><span class=\"token function\">perform</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> clazz <span class=\"token operator\">=</span> Java<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.zyc.fridademo.Calc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> count <span class=\"token operator\">=</span> clazz<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span>overloads<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>count<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        clazz<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span>overloads<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">implementation</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token function\">send</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"重写Tosat\"><a href=\"#重写Tosat\" class=\"headerlink\" title=\"重写Tosat\"></a>重写Tosat</h3><p>​\t参考这个例子能看到，js可以完全重写Android java层的代码。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">Java<span class=\"token punctuation\">.</span><span class=\"token function\">perform</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// hook类: MainActivity</span>\n  <span class=\"token keyword\">var</span> MainActivity <span class=\"token operator\">=</span> Java<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.yashu.aaaaaaaaaaaaaaaaaaaaaa.MainActivity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// hook方法: MainActivity.onCreate</span>\n  MainActivity<span class=\"token punctuation\">.</span>onCreate<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">implementation</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">savedInstanceState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"enter onCreate\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 不打断程序, 该执行的还要执行</span>\n    <span class=\"token comment\">// 执行this.onCreate, 且传参</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 获得Toast组件</span>\n  <span class=\"token keyword\">var</span> Toast <span class=\"token operator\">=</span> Java<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android.widget.Toast\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> makeText <span class=\"token operator\">=</span> Toast<span class=\"token punctuation\">.</span>makeText<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> String <span class=\"token operator\">=</span> Java<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"java.lang.String\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 函数重载, 设置参数类型</span>\n  makeText<span class=\"token punctuation\">.</span><span class=\"token function\">overload</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android.content.Context\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"java.lang.CharSequence\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"int\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">implementation</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token parameter\">context<span class=\"token punctuation\">,</span>\n    content<span class=\"token punctuation\">,</span>\n    time</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"修改toast内容\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 设置字符串重复次数</span>\n    <span class=\"token keyword\">var</span> content <span class=\"token operator\">=</span> <span class=\"token string\">\"牙叔教程 超级棒棒\\n\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 实例化字符串</span>\n    <span class=\"token keyword\">var</span> hookContent <span class=\"token operator\">=</span> String<span class=\"token punctuation\">.</span>$<span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 可以hook, 但是不能打断原先的程序, 原来该做什么, 还要继续做下去</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">makeText</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> hookContent<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"访问类属性\"><a href=\"#访问类属性\" class=\"headerlink\" title=\"访问类属性\"></a>访问类属性</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 类的属性可通过 .属性名.value 访问。如果有函数与属性名相同，则需要使用下划线方式 ._属性名.value 访问。</span>\nJava<span class=\"token punctuation\">.</span><span class=\"token function\">perform</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> clazz <span class=\"token operator\">=</span> Java<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.zyc.fridademo.MainActivity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> calc <span class=\"token operator\">=</span> Java<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.zyc.fridademo.Calc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    clazz<span class=\"token punctuation\">.</span>onCreate<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">implementation</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hook MainActivity onCreate()...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> myCalc <span class=\"token operator\">=</span> calc<span class=\"token punctuation\">.</span>$<span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">send</span><span class=\"token punctuation\">(</span>myCalc<span class=\"token punctuation\">.</span>base<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"修改一下base...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        myCalc<span class=\"token punctuation\">.</span>base<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token number\">88</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">send</span><span class=\"token punctuation\">(</span>myCalc<span class=\"token punctuation\">.</span>base<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"遍历已加载的类和方法\"><a href=\"#遍历已加载的类和方法\" class=\"headerlink\" title=\"遍历已加载的类和方法\"></a>遍历已加载的类和方法</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">Java<span class=\"token punctuation\">.</span><span class=\"token function\">perform</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    Java<span class=\"token punctuation\">.</span><span class=\"token function\">enumerateLoadedClasses</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function-variable function\">onMatch</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span>handle</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.zyc.fridademo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">var</span> clazz <span class=\"token operator\">=</span> Java<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">var</span> methods <span class=\"token operator\">=</span> clazz<span class=\"token punctuation\">.</span>class<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredMethods</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>methods<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>methods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">onComplete</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3p5YzM1NDUvYXJ0aWNsZS9kZXRhaWxzLzExNDYyOTcxOA==\">https://blog.csdn.net/zyc3545/article/details/114629718</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3p5YzM1NDUvYXJ0aWNsZS9kZXRhaWxzLzExNDA4MDIyMD9vcHNfcmVxdWVzdF9taXNjPSUyNTdCJTI1MjJyZXF1ZXN0JTI1NUZpZCUyNTIyJTI1M0ElMjUyMjE2OTY0Mjg1MjMxNjgwMDIyNjU3NjUxMiUyNTIyJTI1MkMlMjUyMnNjbSUyNTIyJTI1M0ElMjUyMjIwMTQwNzEzLjEzMDEwMjMzNC5wYyUyNTVGYmxvZy4lMjUyMiUyNTdEJnJlcXVlc3RfaWQ9MTY5NjQyODUyMzE2ODAwMjI2NTc2NTEyJmJpel9pZD0wJnV0bV9tZWRpdW09ZGlzdHJpYnV0ZS5wY19zZWFyY2hfcmVzdWx0Lm5vbmUtdGFzay1ibG9nLTJ+YmxvZ35maXJzdF9yYW5rX2VjcG1fdjF+cmFua192MzFfZWNwbS0yLTExNDA4MDIyMC1udWxsLW51bGwubm9uZWNhc2UmdXRtX3Rlcm09ZnJpZGEmc3BtPTEwMTguMjIyNi4zMDAxLjQ0NTA=\">https://blog.csdn.net/zyc3545/article/details/114080220?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522169642852316800226576512%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&amp;request_id=169642852316800226576512&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_ecpm_v1~rank_v31_ecpm-2-114080220-null-null.nonecase&amp;utm_term=frida&amp;spm=1018.2226.3001.4450</span>\t</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8yNDc1Y2I0NTMyYzg=\">https://www.jianshu.com/p/2475cb4532c8</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ExOTIxMDk4MDI3L2FydGljbGUvZGV0YWlscy8xMjcwNjIyMjk=\">https://blog.csdn.net/q1921098027/article/details/127062229</span></p>\n",
            "tags": [
                "Hook"
            ]
        }
    ]
}