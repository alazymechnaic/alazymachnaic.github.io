<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://alazymechnaic.github.io</id>
    <title>alazymachine • Posts by &#34;fuzz&#34; tag</title>
    <link href="https://alazymechnaic.github.io" />
    <updated>2023-08-30T08:38:13.000Z</updated>
    <category term="paper" />
    <category term="HEAP PWN CTF" />
    <category term="pwn" />
    <category term="Linux" />
    <category term="Paper" />
    <category term="fuzz" />
    <category term="bypass" />
    <category term="clash" />
    <category term="go, RE" />
    <category term="kernel pwn" />
    <category term="binary" />
    <category term="C" />
    <category term="dataflow" />
    <category term="Android" />
    <category term="arm" />
    <category term="Hook" />
    <category term="go" />
    <category term="writing" />
    <entry>
        <id>https://alazymechnaic.github.io/2023/08/30/afl-ru-men/</id>
        <title>afl_fuzz_DIY</title>
        <link rel="alternate" href="https://alazymechnaic.github.io/2023/08/30/afl-ru-men/"/>
        <content type="html">&lt;h1 id=&#34;AFL&#34;&gt;&lt;a href=&#34;#AFL&#34; class=&#34;headerlink&#34; title=&#34;AFL ++&#34;&gt;&lt;/a&gt;AFL ++&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&#34;afl-for-binary&#34;&gt;&lt;a href=&#34;#afl-for-binary&#34; class=&#34;headerlink&#34; title=&#34;afl for binary&#34;&gt;&lt;/a&gt;afl for binary&lt;/h2&gt;&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sh&#34;&gt;dop@ubuntu:~$ AFL_QEMU_DEBUG_MAPS=1 afl-qemu-trace ./ciscn_2019_c_1&lt;br&gt;400000-402000 r-xp 00000000 08:05 1617251                                /home/dop/ciscn_2019_c_1&lt;br&gt;402000-601000 ---p 00000000 00:00 0&lt;br&gt;601000-602000 r--p 00001000 08:05 1617251                                /home/dop/ciscn_2019_c_1&lt;br&gt;602000-603000 rw-p 00002000 08:05 1617251                                /home/dop/ciscn_2019_c_1&lt;br&gt;4000000000-4000001000 ---p 00000000 00:00 0&lt;br&gt;4000001000-4000801000 rw-p 00000000 00:00 0                              [stack]&lt;br&gt;4000801000-4000802000 r--p 00000000 08:05 1968235                        /usr/lib/x86_64-linux-gnu/ld-2.31.so&lt;br&gt;4000802000-4000825000 r-xp 00001000 08:05 1968235                        /usr/lib/x86_64-linux-gnu/ld-2.31.so&lt;br&gt;4000825000-400082d000 r--p 00024000 08:05 1968235                        /usr/lib/x86_64-linux-gnu/ld-2.31.so&lt;br&gt;400082d000-400082e000 ---p 00000000 00:00 0&lt;br&gt;400082e000-400082f000 r--p 0002c000 08:05 1968235                        /usr/lib/x86_64-linux-gnu/ld-2.31.so&lt;br&gt;400082f000-4000830000 rw-p 0002d000 08:05 1968235                        /usr/lib/x86_64-linux-gnu/ld-2.31.so&lt;br&gt;4000830000-4000833000 rw-p 00000000 00:00 0&lt;br&gt;4000847000-4000869000 r--p 00000000 08:05 1968239                        /usr/lib/x86_64-linux-gnu/libc-2.31.so&lt;br&gt;4000869000-40009e1000 r-xp 00022000 08:05 1968239                        /usr/lib/x86_64-linux-gnu/libc-2.31.so&lt;br&gt;40009e1000-4000a2f000 r--p 0019a000 08:05 1968239                        /usr/lib/x86_64-linux-gnu/libc-2.31.so&lt;br&gt;4000a2f000-4000a33000 r--p 001e7000 08:05 1968239                        /usr/lib/x86_64-linux-gnu/libc-2.31.so&lt;br&gt;4000a33000-4000a35000 rw-p 001eb000 08:05 1968239                        /usr/lib/x86_64-linux-gnu/libc-2.31.so&lt;br&gt;4000a35000-4000a3b000 rw-p 00000000 00:00 0&lt;br&gt;ffffffffff600000-ffffffffff601000 --xp 00000000 00:00 0                  [vsyscall]&lt;br&gt;EEEEEEE                            hh      iii&lt;br&gt;EE      mm mm mmmm    aa aa   cccc hh          nn nnn    eee&lt;br&gt;EEEEE   mmm  mm  mm  aa aaa cc     hhhhhh  iii nnn  nn ee   e&lt;br&gt;EE      mmm  mm  mm aa  aaa cc     hh   hh iii nn   nn eeeee&lt;br&gt;EEEEEEE mmm  mm  mm  aaa aa  ccccc hh   hh iii nn   nn  eeeee&lt;br&gt;====================================================================&lt;br&gt;Welcome to this Encryption machine&lt;br&gt;&lt;br&gt;====================================================================&lt;br&gt;1.Encrypt&lt;br&gt;2.Decrypt&lt;br&gt;3.Exit&lt;br&gt;Input your choice!&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;https://alazymechnaic.oss-cn-hangzhou.aliyuncs.com/blog-page/202309172015669.png&#34; alt=&#34;image-20230901091314691&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sh&#34;&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;export&lt;/span&gt; AFL_QEMU_PERSISTENT_ADDR=0x400B28&lt;br&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;export&lt;/span&gt; AFL_QEMU_PERSISTENT_GPR=1&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;无源码测试&#34;&gt;&lt;a href=&#34;#无源码测试&#34; class=&#34;headerlink&#34; title=&#34;无源码测试&#34;&gt;&lt;/a&gt;无源码测试&lt;/h2&gt;&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sh&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 无源码测试基于qemu实现，首先配置qemu&lt;/span&gt;&lt;br&gt;$ &lt;span class=&#34;hljs-built_in&#34;&gt;cd&lt;/span&gt; qemu_mode&lt;br&gt;$ ./build_qemu_support.sh&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 设置原始输入和输出&lt;/span&gt;&lt;br&gt;$ &lt;span class=&#34;hljs-built_in&#34;&gt;mkdir&lt;/span&gt; fuzz_in&lt;br&gt;$ &lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&#34;hello&#34;&lt;/span&gt; &amp;gt; fuzz_in/testcase&lt;br&gt;$ gcc test.c -o &lt;span class=&#34;hljs-built_in&#34;&gt;test&lt;/span&gt;&lt;br&gt;$ afl-fuzz -i fuzz_in -o fuzz_out -Q ./test&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;https://alazymechnaic.oss-cn-hangzhou.aliyuncs.com/blog-page/202309172015117.png&#34; alt=&#34;image-20230901102144519&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sh&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 输出结果&lt;/span&gt;&lt;br&gt;└── default&lt;br&gt;    ├── cmdline&lt;br&gt;    ├── crashes&lt;br&gt;    │&amp;nbsp;&amp;nbsp; ├── &lt;span class=&#34;hljs-built_in&#34;&gt;id&lt;/span&gt;:000000,sig:11,src:000000+000030,time:3961,execs:13145,op:splice,rep:4&lt;br&gt;    │&amp;nbsp;&amp;nbsp; ├── &lt;span class=&#34;hljs-built_in&#34;&gt;id&lt;/span&gt;:000001,sig:04,src:000000+000030,time:3961,execs:13146,op:splice,rep:5&lt;br&gt;    │&amp;nbsp;&amp;nbsp; ├── &lt;span class=&#34;hljs-built_in&#34;&gt;id&lt;/span&gt;:000002,sig:04,src:000000+000026,time:3985,execs:13213,op:splice,rep:8&lt;br&gt;    │&amp;nbsp;&amp;nbsp; ├── &lt;span class=&#34;hljs-built_in&#34;&gt;id&lt;/span&gt;:000003,sig:11,src:000043+000009,time:4075,execs:13502,op:splice,rep:16&lt;br&gt;    │&amp;nbsp;&amp;nbsp; ├── &lt;span class=&#34;hljs-built_in&#34;&gt;id&lt;/span&gt;:000004,sig:11,src:000035+000023,time:4240,execs:14064,op:splice,rep:16&lt;br&gt;    │&amp;nbsp;&amp;nbsp; ├── &lt;span class=&#34;hljs-built_in&#34;&gt;id&lt;/span&gt;:000005,sig:11,src:000025+000037,time:4319,execs:14316,op:splice,rep:6&lt;br&gt;    │&amp;nbsp;&amp;nbsp; └── README.txt&lt;br&gt;    ├── fuzz_bitmap&lt;br&gt;    ├── fuzzer_setup&lt;br&gt;    ├── fuzzer_stats&lt;br&gt;    ├── hangs&lt;br&gt;    ├── plot_data&lt;br&gt;    └── queue&lt;br&gt;        ├── &lt;span class=&#34;hljs-built_in&#34;&gt;id&lt;/span&gt;:000000,time:0,execs:0,orig:testcase&lt;br&gt;        ├── &lt;span class=&#34;hljs-built_in&#34;&gt;id&lt;/span&gt;:000001,src:000000,time:4,execs:12,op:havoc,rep:2,+cov&lt;br&gt;        ├── &lt;span class=&#34;hljs-built_in&#34;&gt;id&lt;/span&gt;:000002,src:000000,time:6,execs:20,op:havoc,rep:1&lt;br&gt;        ├── &lt;span class=&#34;hljs-built_in&#34;&gt;id&lt;/span&gt;:000003,src:000000,time:9,execs:28,op:havoc,rep:1&lt;br&gt;        ├── &lt;span class=&#34;hljs-built_in&#34;&gt;id&lt;/span&gt;:000004,src:000000,time:12,execs:37,op:havoc,rep:1&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# &lt;/span&gt;&lt;br&gt;crashes：存放去重后触发crash的数据&lt;br&gt;&lt;br&gt;fuzz_bitmap：记录代码覆盖率&lt;br&gt;&lt;br&gt;fuzzer_stats：fuzz状态&lt;br&gt;&lt;br&gt;hangs：存放去重后触发挂起的数据&lt;br&gt;&lt;br&gt;plot_data：绘图数据&lt;br&gt;&lt;br&gt;queue：有效的样本集合&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果需要对so文件进行测试，需要将相应的动态链接库目录加入到环境变量中&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sh&#34;&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;export&lt;/span&gt; QEMU_LD_PREFIX=&lt;span class=&#34;hljs-variable&#34;&gt;$LD_LIBRARY_PATH&lt;/span&gt;:&lt;br&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;export&lt;/span&gt; LD_LIBRARY_PATH=&lt;span class=&#34;hljs-variable&#34;&gt;$LD_LIBRARY_PATH&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 两个都试试吧&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;自定义fuzz策略&#34;&gt;&lt;a href=&#34;#自定义fuzz策略&#34; class=&#34;headerlink&#34; title=&#34;自定义fuzz策略&#34;&gt;&lt;/a&gt;自定义fuzz策略&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://www.anquanke.com/post/id/254363&#34;&gt;https://www.anquanke.com/post/id/254363&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/AFLplusplus/AFLplusplus/blob/dev/docs/custom_mutators.md%E3%80%81&#34;&gt;https://github.com/AFLplusplus/AFLplusplus/blob/dev/docs/custom_mutators.md、&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;官方自定义文档&#34;&gt;&lt;a href=&#34;#官方自定义文档&#34; class=&#34;headerlink&#34; title=&#34;官方自定义文档&#34;&gt;&lt;/a&gt;官方自定义文档&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/AFLplusplus/AFLplusplus/blob/dev/docs/custom_mutators.md#2-apis&#34;&gt;https://github.com/AFLplusplus/AFLplusplus/blob/dev/docs/custom_mutators.md#2-apis&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装libprotobuf&#34;&gt;&lt;a href=&#34;#安装libprotobuf&#34; class=&#34;headerlink&#34; title=&#34;安装libprotobuf&#34;&gt;&lt;/a&gt;安装libprotobuf&lt;/h3&gt;&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sh&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 提示cmake 版本太低 https://www.cnblogs.com/jsdy/p/12689470.html#_label0&lt;/span&gt;&lt;br&gt;升级cmake &lt;br&gt;$ wget http://www.cmake.org/files/v3.25/cmake-3.25.2.tar.gz&lt;br&gt;./bootstrap&lt;br&gt;make&lt;br&gt;make install&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 出找不到openssl &lt;/span&gt;&lt;br&gt;Could NOT find OpenSSL, try to &lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; the path to OpenSSL root folder &lt;span class=&#34;hljs-keyword&#34;&gt;in&lt;/span&gt; the system variable OPENSSL_ROOT_DIR (missing: OPENSSL_LIBRARIES OPENSSL_INCLUDE_DIR) &lt;br&gt;$ sudo apt-get install libssl-dev&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;安装libxml4&lt;/p&gt;
&lt;p&gt;autogen.sh &lt;/p&gt;
&lt;p&gt;报错：&lt;br&gt;configure.ac:1087: error: possibly undefined macro: m4_ifdef&lt;br&gt;      If this token and others are legitimate, please use m4_pattern_allow.&lt;br&gt;      See the Autoconf documentation.&lt;/p&gt;
&lt;p&gt;解决方案：sudo cp /usr/share/aclocal/*.m4 /usr/local/share/aclocal/&lt;br&gt;&lt;a href=&#34;https://www.cnblogs.com/y4247464/p/14388334.html&#34;&gt;https://www.cnblogs.com/y4247464/p/14388334.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://alazymechnaic.oss-cn-hangzhou.aliyuncs.com/blog-page/202309081527504.png&#34;&gt;	&lt;/p&gt;
&lt;p&gt;本文介绍如何利用AFL Plus Plus实现自定义目标的模糊测试。&lt;/p&gt;
&lt;p&gt;Tutorials ： &lt;a href=&#34;https://github.com/AFLplusplus/AFLplusplus/blob/stable/docs/tutorials.md&#34;&gt;https://github.com/AFLplusplus/AFLplusplus/blob/stable/docs/tutorials.md&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;AFL源码阅读&#34;&gt;&lt;a href=&#34;#AFL源码阅读&#34; class=&#34;headerlink&#34; title=&#34;AFL源码阅读&#34;&gt;&lt;/a&gt;AFL源码阅读&lt;/h2&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;// afl-fuzz.h: line 431&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;// 该结构用于存储本次afl运行所需要的上下文内容&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;afl_state&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Position of this state in the global states list */&lt;/span&gt;&lt;br&gt;  u32 _id;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-type&#34;&gt;afl_forkserver_t&lt;/span&gt; fsrv;&lt;br&gt;  &lt;span class=&#34;hljs-type&#34;&gt;sharedmem_t&lt;/span&gt;      shm;&lt;br&gt;  &lt;span class=&#34;hljs-type&#34;&gt;sharedmem_t&lt;/span&gt;     *shm_fuzz;&lt;br&gt;  &lt;span class=&#34;hljs-type&#34;&gt;afl_env_vars_t&lt;/span&gt;   afl_env;	&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//...&lt;/span&gt;&lt;br&gt;} &lt;span class=&#34;hljs-type&#34;&gt;afl_state_t&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;// afl-fuzz-init.c 该函数的目的是使用原始输入执行程序&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;perform_dry_run&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(&lt;span class=&#34;hljs-type&#34;&gt;afl_state_t&lt;/span&gt; *afl)&lt;/span&gt; {}&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;// afl-forkserver.c &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;// 该函数用于进行子程序的执行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;fsrv_run_result_t&lt;/span&gt; __attribute__((hot))&lt;br&gt;afl_fsrv_run_target(&lt;span class=&#34;hljs-type&#34;&gt;afl_forkserver_t&lt;/span&gt; *fsrv, u32 timeout,&lt;br&gt;                    &lt;span class=&#34;hljs-keyword&#34;&gt;volatile&lt;/span&gt; u8 *stop_soon_p) {&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="fuzz" />
        <updated>2023-08-30T08:38:13.000Z</updated>
    </entry>
</feed>
