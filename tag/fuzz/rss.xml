<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>alazymachine • Posts by &#34;fuzz&#34; tag</title>
        <link>https://alazymechnaic.github.io</link>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Wed, 30 Aug 2023 16:38:13 +0800</pubDate>
        <lastBuildDate>Wed, 30 Aug 2023 16:38:13 +0800</lastBuildDate>
        <category>paper</category>
        <category>HEAP PWN CTF</category>
        <category>pwn</category>
        <category>Linux</category>
        <category>Paper</category>
        <category>fuzz</category>
        <category>bypass</category>
        <category>clash</category>
        <category>go, RE</category>
        <category>kernel pwn</category>
        <category>binary</category>
        <category>personal</category>
        <category>C</category>
        <category>dataflow</category>
        <category>Android</category>
        <category>arm</category>
        <category>Hook</category>
        <category>AWD</category>
        <category>cipher</category>
        <category>go</category>
        <category>writing</category>
        <item>
            <guid isPermalink="true">https://alazymechnaic.github.io/2023/08/30/afl-fuzz-diy/</guid>
            <title>afl_fuzz_DIY</title>
            <link>https://alazymechnaic.github.io/2023/08/30/afl-fuzz-diy/</link>
            <category>fuzz</category>
            <pubDate>Wed, 30 Aug 2023 16:38:13 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;AFL&#34;&gt;&lt;a href=&#34;#AFL&#34; class=&#34;headerlink&#34; title=&#34;AFL ++&#34;&gt;&lt;/a&gt;AFL ++&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&#34;afl-for-binary&#34;&gt;&lt;a href=&#34;#afl-for-binary&#34; class=&#34;headerlink&#34; title=&#34;afl for binary&#34;&gt;&lt;/a&gt;afl for binary&lt;/h2&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;dop@ubuntu:~$ &lt;span class=&#34;token assign-left variable&#34;&gt;AFL_QEMU_DEBUG_MAPS&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; afl-qemu-trace ./ciscn_2019_c_1
&lt;span class=&#34;token number&#34;&gt;400000&lt;/span&gt;-402000 r-xp 00000000 08:05 &lt;span class=&#34;token number&#34;&gt;1617251&lt;/span&gt;                                /home/dop/ciscn_2019_c_1
&lt;span class=&#34;token number&#34;&gt;402000&lt;/span&gt;-601000 ---p 00000000 00:00 &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;601000&lt;/span&gt;-602000 r--p 00001000 08:05 &lt;span class=&#34;token number&#34;&gt;1617251&lt;/span&gt;                                /home/dop/ciscn_2019_c_1
&lt;span class=&#34;token number&#34;&gt;602000&lt;/span&gt;-603000 rw-p 00002000 08:05 &lt;span class=&#34;token number&#34;&gt;1617251&lt;/span&gt;                                /home/dop/ciscn_2019_c_1
&lt;span class=&#34;token number&#34;&gt;4000000000&lt;/span&gt;-4000001000 ---p 00000000 00:00 &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;4000001000&lt;/span&gt;-4000801000 rw-p 00000000 00:00 &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;                              &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;stack&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;4000801000&lt;/span&gt;-4000802000 r--p 00000000 08:05 &lt;span class=&#34;token number&#34;&gt;1968235&lt;/span&gt;                        /usr/lib/x86_64-linux-gnu/ld-2.31.so
&lt;span class=&#34;token number&#34;&gt;4000802000&lt;/span&gt;-4000825000 r-xp 00001000 08:05 &lt;span class=&#34;token number&#34;&gt;1968235&lt;/span&gt;                        /usr/lib/x86_64-linux-gnu/ld-2.31.so
&lt;span class=&#34;token number&#34;&gt;4000825000&lt;/span&gt;-400082d000 r--p 00024000 08:05 &lt;span class=&#34;token number&#34;&gt;1968235&lt;/span&gt;                        /usr/lib/x86_64-linux-gnu/ld-2.31.so
400082d000-400082e000 ---p 00000000 00:00 &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
400082e000-400082f000 r--p 0002c000 08:05 &lt;span class=&#34;token number&#34;&gt;1968235&lt;/span&gt;                        /usr/lib/x86_64-linux-gnu/ld-2.31.so
400082f000-4000830000 rw-p 0002d000 08:05 &lt;span class=&#34;token number&#34;&gt;1968235&lt;/span&gt;                        /usr/lib/x86_64-linux-gnu/ld-2.31.so
&lt;span class=&#34;token number&#34;&gt;4000830000&lt;/span&gt;-4000833000 rw-p 00000000 00:00 &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;4000847000&lt;/span&gt;-4000869000 r--p 00000000 08:05 &lt;span class=&#34;token number&#34;&gt;1968239&lt;/span&gt;                        /usr/lib/x86_64-linux-gnu/libc-2.31.so
&lt;span class=&#34;token number&#34;&gt;4000869000&lt;/span&gt;-40009e1000 r-xp 00022000 08:05 &lt;span class=&#34;token number&#34;&gt;1968239&lt;/span&gt;                        /usr/lib/x86_64-linux-gnu/libc-2.31.so
40009e1000-4000a2f000 r--p 0019a000 08:05 &lt;span class=&#34;token number&#34;&gt;1968239&lt;/span&gt;                        /usr/lib/x86_64-linux-gnu/libc-2.31.so
4000a2f000-4000a33000 r--p 001e7000 08:05 &lt;span class=&#34;token number&#34;&gt;1968239&lt;/span&gt;                        /usr/lib/x86_64-linux-gnu/libc-2.31.so
4000a33000-4000a35000 rw-p 001eb000 08:05 &lt;span class=&#34;token number&#34;&gt;1968239&lt;/span&gt;                        /usr/lib/x86_64-linux-gnu/libc-2.31.so
4000a35000-4000a3b000 rw-p 00000000 00:00 &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
ffffffffff600000-ffffffffff601000 &lt;span class=&#34;token parameter variable&#34;&gt;--xp&lt;/span&gt; 00000000 00:00 &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;                  &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;vsyscall&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
EEEEEEE                            hh      iii
EE      mm mm mmmm    aa aa   cccc hh          nn nnn    eee
EEEEE   mmm  mm  mm  aa aaa cc     hhhhhh  iii nnn  nn ee   e
EE      mmm  mm  mm aa  aaa cc     hh   hh iii nn   nn eeeee
EEEEEEE mmm  mm  mm  aaa aa  ccccc hh   hh iii nn   nn  eeeee
&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;
Welcome to this Encryption machine

&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;.Encrypt
&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;.Decrypt
&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;.Exit
Input your choice&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img data-src=&#34;https://alazymechnaic.oss-cn-hangzhou.aliyuncs.com/blog-page/202309172015669.png&#34; alt=&#34;image-20230901091314691&#34;&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;AFL_QEMU_PERSISTENT_ADDR&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;0x400B28
&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;AFL_QEMU_PERSISTENT_GPR&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;无源码测试&#34;&gt;&lt;a href=&#34;#无源码测试&#34; class=&#34;headerlink&#34; title=&#34;无源码测试&#34;&gt;&lt;/a&gt;无源码测试&lt;/h2&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 无源码测试基于qemu实现，首先配置qemu&lt;/span&gt;
$ &lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; qemu_mode
$ ./build_qemu_support.sh
&lt;span class=&#34;token comment&#34;&gt;# 设置原始输入和输出&lt;/span&gt;
$ &lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; fuzz_in
$ &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;hello&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; fuzz_in/testcase
$ gcc test.c &lt;span class=&#34;token parameter variable&#34;&gt;-o&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;test&lt;/span&gt;
$ afl-fuzz &lt;span class=&#34;token parameter variable&#34;&gt;-i&lt;/span&gt; fuzz_in &lt;span class=&#34;token parameter variable&#34;&gt;-o&lt;/span&gt; fuzz_out &lt;span class=&#34;token parameter variable&#34;&gt;-Q&lt;/span&gt; ./test&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img data-src=&#34;https://alazymechnaic.oss-cn-hangzhou.aliyuncs.com/blog-page/202309172015117.png&#34; alt=&#34;image-20230901102144519&#34;&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 输出结果&lt;/span&gt;
└── default
    ├── cmdline
    ├── crashes
    │   ├── id:000000,sig:11,src:000000+000030,time:3961,execs:13145,op:splice,rep:4
    │   ├── id:000001,sig:04,src:000000+000030,time:3961,execs:13146,op:splice,rep:5
    │   ├── id:000002,sig:04,src:000000+000026,time:3985,execs:13213,op:splice,rep:8
    │   ├── id:000003,sig:11,src:000043+000009,time:4075,execs:13502,op:splice,rep:16
    │   ├── id:000004,sig:11,src:000035+000023,time:4240,execs:14064,op:splice,rep:16
    │   ├── id:000005,sig:11,src:000025+000037,time:4319,execs:14316,op:splice,rep:6
    │   └── README.txt
    ├── fuzz_bitmap
    ├── fuzzer_setup
    ├── fuzzer_stats
    ├── hangs
    ├── plot_data
    └── queue
        ├── id:000000,time:0,execs:0,orig:testcase
        ├── id:000001,src:000000,time:4,execs:12,op:havoc,rep:2,+cov
        ├── id:000002,src:000000,time:6,execs:20,op:havoc,rep:1
        ├── id:000003,src:000000,time:9,execs:28,op:havoc,rep:1
        ├── id:000004,src:000000,time:12,execs:37,op:havoc,rep:1
&lt;span class=&#34;token comment&#34;&gt;# &lt;/span&gt;
crashes：存放去重后触发crash的数据

fuzz_bitmap：记录代码覆盖率

fuzzer_stats：fuzz状态

hangs：存放去重后触发挂起的数据

plot_data：绘图数据

queue：有效的样本集合
&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果需要对so文件进行测试，需要将相应的动态链接库目录加入到环境变量中&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;QEMU_LD_PREFIX&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$LD_LIBRARY_PATH&lt;/span&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$LD_LIBRARY_PATH&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 两个都试试吧&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;自定义fuzz策略&#34;&gt;&lt;a href=&#34;#自定义fuzz策略&#34; class=&#34;headerlink&#34; title=&#34;自定义fuzz策略&#34;&gt;&lt;/a&gt;自定义fuzz策略&lt;/h2&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW5xdWFua2UuY29tL3Bvc3QvaWQvMjU0MzYz&#34;&gt;https://www.anquanke.com/post/id/254363&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0FGTHBsdXNwbHVzL0FGTHBsdXNwbHVzL2Jsb2IvZGV2L2RvY3MvY3VzdG9tX211dGF0b3JzLm1kJUUzJTgwJTgx&#34;&gt;https://github.com/AFLplusplus/AFLplusplus/blob/dev/docs/custom_mutators.md、&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;官方自定义文档&#34;&gt;&lt;a href=&#34;#官方自定义文档&#34; class=&#34;headerlink&#34; title=&#34;官方自定义文档&#34;&gt;&lt;/a&gt;官方自定义文档&lt;/h3&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0FGTHBsdXNwbHVzL0FGTHBsdXNwbHVzL2Jsb2IvZGV2L2RvY3MvY3VzdG9tX211dGF0b3JzLm1kIzItYXBpcw==&#34;&gt;https://github.com/AFLplusplus/AFLplusplus/blob/dev/docs/custom_mutators.md#2-apis&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装libprotobuf&#34;&gt;&lt;a href=&#34;#安装libprotobuf&#34; class=&#34;headerlink&#34; title=&#34;安装libprotobuf&#34;&gt;&lt;/a&gt;安装libprotobuf&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 提示cmake 版本太低 https://www.cnblogs.com/jsdy/p/12689470.html#_label0&lt;/span&gt;
升级cmake 
$ &lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; http://www.cmake.org/files/v3.25/cmake-3.25.2.tar.gz
./bootstrap
&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 出找不到openssl &lt;/span&gt;
Could NOT &lt;span class=&#34;token function&#34;&gt;find&lt;/span&gt; OpenSSL, try to &lt;span class=&#34;token builtin class-name&#34;&gt;set&lt;/span&gt; the path to OpenSSL root folder &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; the system variable OPENSSL_ROOT_DIR &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;missing: OPENSSL_LIBRARIES OPENSSL_INCLUDE_DIR&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 
$ &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt-get&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; libssl-dev
&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装libxml4&lt;/p&gt;
&lt;p&gt;autogen.sh &lt;/p&gt;
&lt;p&gt;报错：&lt;br&gt;configure.ac:1087: error: possibly undefined macro: m4_ifdef&lt;br&gt;      If this token and others are legitimate, please use m4_pattern_allow.&lt;br&gt;      See the Autoconf documentation.&lt;/p&gt;
&lt;p&gt;解决方案：sudo cp /usr/share/aclocal/*.m4 /usr/local/share/aclocal/&lt;br&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20veTQyNDc0NjQvcC8xNDM4ODMzNC5odG1s&#34;&gt;https://www.cnblogs.com/y4247464/p/14388334.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://alazymechnaic.oss-cn-hangzhou.aliyuncs.com/blog-page/202309081527504.png&#34;&gt;	&lt;/p&gt;
&lt;p&gt;本文介绍如何利用AFL Plus Plus实现自定义目标的模糊测试。&lt;/p&gt;
&lt;p&gt;Tutorials ： &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0FGTHBsdXNwbHVzL0FGTHBsdXNwbHVzL2Jsb2Ivc3RhYmxlL2RvY3MvdHV0b3JpYWxzLm1k&#34;&gt;https://github.com/AFLplusplus/AFLplusplus/blob/stable/docs/tutorials.md&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;AFL源码阅读&#34;&gt;&lt;a href=&#34;#AFL源码阅读&#34; class=&#34;headerlink&#34; title=&#34;AFL源码阅读&#34;&gt;&lt;/a&gt;AFL源码阅读&lt;/h2&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;// afl-fuzz.h: line 431&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;// 该结构用于存储本次afl运行所需要的上下文内容&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;afl_state&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;/* Position of this state in the global states list */&lt;/span&gt;
  u32 _id&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;token class-name&#34;&gt;afl_forkserver_t&lt;/span&gt; fsrv&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;token class-name&#34;&gt;sharedmem_t&lt;/span&gt;      shm&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;token class-name&#34;&gt;sharedmem_t&lt;/span&gt;     &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;shm_fuzz&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;token class-name&#34;&gt;afl_env_vars_t&lt;/span&gt;   afl_env&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;	
  &lt;span class=&#34;token comment&#34;&gt;//...&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;afl_state_t&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;// afl-fuzz-init.c 该函数的目的是使用原始输入执行程序&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;perform_dry_run&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;afl_state_t&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;afl&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;// afl-forkserver.c &lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;// 该函数用于进行子程序的执行&lt;/span&gt;
&lt;span class=&#34;token class-name&#34;&gt;fsrv_run_result_t&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;__attribute__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;hot&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;afl_fsrv_run_target&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;afl_forkserver_t&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;fsrv&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; u32 timeout&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
                    &lt;span class=&#34;token keyword&#34;&gt;volatile&lt;/span&gt; u8 &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;stop_soon_p&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

 ]]></description>
        </item>
    </channel>
</rss>
